name: Publish to Conda

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  conda-build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,defaults
          channel-priority: strict
          activate-environment: build-env
          
      - name: Install conda-build and anaconda-client
        shell: bash -l {0}
        run: |
          conda config --set auto_activate_base false
          # Install latest versions to avoid deprecation warnings
          conda install -y conda-build>=3.28 anaconda-client>=1.12
          # Set environment variable to suppress tar extraction warnings
          export PYTHONWARNINGS="ignore::DeprecationWarning"
          
      - name: Verify conda recipe exists
        shell: bash -l {0}
        run: |
          if [ ! -f conda-recipe/meta.yaml ]; then
            echo "Error: conda-recipe/meta.yaml not found"
            exit 1
          fi
          cat conda-recipe/meta.yaml
          
      - name: Build conda package
        shell: bash -l {0}
        env:
          PYTHONWARNINGS: "ignore::DeprecationWarning"
        run: |
          conda-build conda-recipe --python ${{ matrix.python-version }} --no-anaconda-upload
          
      - name: Upload to Anaconda.org
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          PYTHONWARNINGS: "ignore::DeprecationWarning"
        run: |
          if [ -n "$ANACONDA_API_TOKEN" ]; then
            PACKAGE_PATH=$(conda-build conda-recipe --python ${{ matrix.python-version }} --output)
            echo "Uploading package: $PACKAGE_PATH"
            anaconda -t $ANACONDA_API_TOKEN upload --force "$PACKAGE_PATH"
          else
            echo "ANACONDA_TOKEN not set, skipping upload"
            echo "Package built successfully but not uploaded"
          fi
